<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <title>observer-{{ .current_state }}</title>

    <!-- Bootstrap core CSS -->
    <link href="/statics/libs/bootstrap-5.1.0/css/bootstrap.min.css" rel="stylesheet">

    <!-- CodeMirror -->
    <link rel=stylesheet href="/statics/libs/codemirror/doc/docs.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/lib/codemirror.css">

    <link rel="stylesheet" href="/statics/libs/codemirror/theme/3024-day.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/3024-night.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/abbott.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/abcdef.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/ambiance.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/ayu-dark.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/ayu-mirage.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/base16-dark.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/bespin.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/base16-light.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/blackboard.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/cobalt.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/colorforth.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/dracula.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/duotone-dark.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/duotone-light.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/eclipse.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/elegant.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/erlang-dark.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/gruvbox-dark.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/hopscotch.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/icecoder.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/isotope.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/juejin.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/lesser-dark.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/liquibyte.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/lucario.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/material.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/material-darker.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/material-palenight.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/material-ocean.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/mbo.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/mdn-like.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/midnight.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/monokai.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/moxer.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/neat.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/neo.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/night.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/nord.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/oceanic-next.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/panda-syntax.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/paraiso-dark.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/paraiso-light.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/pastel-on-dark.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/railscasts.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/rubyblue.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/seti.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/shadowfox.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/solarized.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/the-matrix.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/tomorrow-night-bright.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/tomorrow-night-eighties.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/ttcn.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/twilight.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/vibrant-ink.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/xq-dark.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/xq-light.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/yeti.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/idea.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/darcula.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/yonce.css">
    <link rel="stylesheet" href="/statics/libs/codemirror/theme/zenburn.css">
    <script src="/statics/libs/codemirror/lib/codemirror.js"></script>
    <script src="/statics/libs/codemirror/mode/javascript/javascript.js"></script>
    <script src="/statics/libs/codemirror/addon/selection/active-line.js"></script>
    <script src="/statics/libs/codemirror/addon/edit/matchbrackets.js"></script>


    <script src="/statics/js/jquery-3.6.0.min.js"></script>

    <!-- Custom styles for this template -->
    <link href="/statics/css/sidebars.css" rel="stylesheet">
    <link href="/statics/css/main.css" rel="stylesheet">
</head>
<body>

<main>

    {{ template "sidebars" }}

    <div class="content-div m-4">
        {{/*   导航条    */}}
        <nav style="--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='currentColor'/%3E%3C/svg%3E&#34;);" aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#">Configuration</a></li>
                <li class="breadcrumb-item active" aria-current="page" id="current-state">{{ .current_state }}</li>
            </ol>
        </nav>

        <ul class="nav nav-tabs">
            <li class="nav-item">
                <a class="nav-link active"  data-bs-toggle="tab" href="#observer">可视化配置</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" data-bs-toggle="tab" href="#advanced">高级配置</a>
            </li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane fade show active" id="observer">
                <div class="submit-box">
                    <button type="submit" class="btn btn-outline-secondary float-right" onclick="observerConfRead()">恢复</button>
                    <button type="submit" class="btn btn-outline-primary float-right" onclick="observerConfWrite()">写入并重启</button>
                </div>
                <div class="form-box">
                    <form id="config-form">
                    </form>
                </div>
            </div>
            <div class="tab-pane fade" id="advanced">
                <div class="submit-box">
                    <button type="submit" class="btn btn-outline-secondary float-right" onclick="confRead()">恢复</button>
                    <button type="submit" class="btn btn-outline-primary float-right" onclick="confWrite()">写入并重启</button>
                </div>
                <div class="form-floating">
                    <textarea class="form-control" id="code"></textarea>
                    <label for="code" id="code-label"></label>
                </div>
{{/*                <script src="/statics/js/main.js"></script>*/}}
            </div>
        </div>
    </div>
</main>
<script>
    //读取文件的内容
    $(function(){
        refreshData()
    });
    function refreshData() {
        observerConfRead() // 获取解析后的配置集
        confRead(); // 读取配置文件
    }

    /* Resolved 获取已经解析的结果 */
    function observerConfRead() {
        $.ajax({
            type:'GET',
            url:'/api/configuration_file/observer',
            data:{
                "current_state":$("#current-state").html(),
                // "configuration_file_path":""
            },
            success:function(result){
                console.log('observerConfRead：')
                console.log(result)
                if(result.success){
                    //    解析 JSON 数据
                    // console.log(result.config.Values)
                    parsingData(result.config.Values);
                }else{
                    alert("读取内容失败");
                }
            }
        })
    }
    /* Resolved 保存更新的解析数据 */
    function observerConfWrite() {

        let config_form = $('#config-form');
        let objArray = config_form.serializeArray()
        // console.log(getFormData(objArray))

        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            url:'/api/configuration_file/observer',
            data: JSON.stringify(getFormData(objArray)),
            success: function (result) {
                console.log("observerConfWrite 接口结果：");
                console.log(result);
                if (result.success) {
                    refreshData(); // 刷新数据
                    alert("写入配置成功！");
                }
            },
            error : function() {
                alert("写入配置异常！");
            }
        });
    }
    //utility function
    function getFormData(data) {
        var unindexed_array = data;
        var indexed_array = {};

        $.map(unindexed_array, function(n, i) {
            indexed_array[n['name']] = n['value'];
        });
        indexed_array["current_state"] = $("#current-state").html();

        return indexed_array;
    }


    /* 解析 JSON 数据到页面 */
    function parsingData(data){

        let config_form = $("#config-form");
        config_form.empty(); // 添加前先清空

        let current_state = $("#current-state").html();
        if (current_state === "MySQL"){
            showMySQLData(data,config_form);
        }else if(current_state === "Redis"){
            showRedisData(data,config_form);
        }


    }
    function showMySQLData(data,config_form) {
        for (let section in data){
            if (data.hasOwnProperty(section)){
                // console.log(section)
                let h4Dom = $("<h4 class='text-black'></h4>").text("[" + section + "]"); // 构建DOM
                config_form.append(h4Dom)
                for (let item in data[section]){
                    // console.log(item + " : " + data[section][item]);
                    let outDivDom = $("<div class='row'></div>");

                    let labelDom = $("<label class='col-sm-6 col-form-label'></label>").text(item);

                    let inputDom = $("<input type='text' class='form-control'>").val(data[section][item]);
                    inputDom.attr('name',item);
                    let inDivDom = $("<div class='col-sm-6'></div>").append(inputDom);

                    outDivDom.append(labelDom,inDivDom);
                    config_form.append(outDivDom);
                }
            }
        }
    }
    function showRedisData(data,config_form) {
        for (let item in data){
            if (data.hasOwnProperty(item)){
                // console.log(item + " : " + data[section][item]);
                let outDivDom = $("<div class='row'></div>");

                let labelDom = $("<label class='col-sm-6 col-form-label'></label>").text(item);

                let inputDom = $("<input type='text' class='form-control'>").val(data[item]);
                inputDom.attr('name',item);
                let inDivDom = $("<div class='col-sm-6'></div>").append(inputDom);

                outDivDom.append(labelDom,inDivDom);
                config_form.append(outDivDom);
            }
        }
    }

    /* 读取配置文件 */
    function confRead(){
        $.ajax({
            type:'GET',
            url:'/api/configuration_file',
            data:{
                "current_state":$("#current-state").html()
            },
            success:function(result){
                console.log('读取的结果')
                console.log(result)
                if(result.success){
                    $("#code").html(result.content);
                    $("#code-label").html(result.file_name);
                }else{
                    alert("读取内容失败");
                }
            }
        })
    }
    /* 写入配置文件 */
    function confWrite(){
        $.ajax({
            type:'POST',
            url:'/api/configuration_file',
            data:{
                "current_state":$("#current-state").html(),// 当前状态
                // "configuration_file_path":$("#txtname").html(), // 写入的配置文件位置
                "updated_content":$("#code").val() // 写入的内容
            },
            success:function(result){
                if(result.success){
                    alert("写入成功");
                    refreshData(); // 写入成功重新请求一次数据
                }else{
                    alert("写入内容失败");
                }
            }
        })
    }
</script>
</body>
</html>
